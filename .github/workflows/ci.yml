name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-php:
    name: PHP Linting
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo
        coverage: none

    - name: Cache Composer dependencies
      uses: actions/cache@v4
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Run Laravel Pint
      run: ./vendor/bin/pint --test

  test-unit:
    name: Unit & Feature Tests
    runs-on: ubuntu-latest
    needs: lint-php

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: xptrackr_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, mysql, pdo_mysql, bcmath, intl, gd
        coverage: xdebug

    - name: Cache Composer dependencies
      uses: actions/cache@v4
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Generate key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Run Migrations
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: xptrackr_test
        DB_USERNAME: root
        DB_PASSWORD: password
      run: php artisan migrate --force

    - name: Execute tests via Pest
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: xptrackr_test
        DB_USERNAME: root
        DB_PASSWORD: password
      run: ./vendor/bin/pest --coverage-text --coverage-clover=coverage.xml

    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      if: success()
      with:
        files: ./coverage.xml
        fail_ci_if_error: false

  test-browser:
    name: Browser Tests
    runs-on: ubuntu-latest
    needs: lint-php

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: xptrackr_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, mysql, pdo_mysql, bcmath, intl, gd

    - name: Cache Composer dependencies
      uses: actions/cache@v4
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Cache NPM dependencies
      uses: actions/cache@v4
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Copy .env.dusk.local
      run: cp .env .env.dusk.local

    - name: Update .env.dusk.local
      run: |
        sed -i "s/DB_DATABASE=.*/DB_DATABASE=xptrackr_test/" .env.dusk.local
        sed -i "s/DB_HOST=.*/DB_HOST=127.0.0.1/" .env.dusk.local
        sed -i "s/DB_USERNAME=.*/DB_USERNAME=root/" .env.dusk.local
        sed -i "s/DB_PASSWORD=.*/DB_PASSWORD=password/" .env.dusk.local
        sed -i "s|APP_URL=.*|APP_URL=http://127.0.0.1:8000|" .env.dusk.local

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Install NPM dependencies
      run: npm ci

    - name: Build assets
      run: npm run build

    - name: Generate key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Run Migrations
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: xptrackr_test
        DB_USERNAME: root
        DB_PASSWORD: password
      run: php artisan migrate --force

    - name: Upgrade Chrome Driver
      run: php artisan dusk:chrome-driver --detect

    - name: Start Chrome Driver
      run: ./vendor/laravel/dusk/bin/chromedriver-linux &

    - name: Start Laravel Server
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: xptrackr_test
        DB_USERNAME: root
        DB_PASSWORD: password
      run: php artisan serve --no-reload &

    - name: Wait for server to be ready
      run: |
        timeout 30 bash -c 'until curl -s http://127.0.0.1:8000 > /dev/null; do sleep 1; done'

    - name: Run Dusk Tests
      env:
        APP_URL: "http://127.0.0.1:8000"
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: xptrackr_test
        DB_USERNAME: root
        DB_PASSWORD: password
      run: php artisan dusk

    - name: Upload Screenshots
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: screenshots
        path: tests/Browser/screenshots

    - name: Upload Console Logs
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: console
        path: tests/Browser/console

  security-check:
    name: Security Check
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Run security check
      uses: symfonycorp/security-checker-action@v4
